name: test

on: push

jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Test
        run: |
          flutter pub get
          flutter test

      - name: Format
        run: |
          flutter format --set-exit-if-changed .

  drive_ios:
    strategy:
      matrix:
        device:
          - "iPhone 8 (13.3)"
          - "iPhone 11 Pro (13.3)"
      fail-fast: false
    runs-on: macos-latest
    needs: test
    steps:
      - name: List all simulators
        run: xcrun instruments -s
      # get UUID  simulator and boot a simulator on mac from  command line
      - name: Start Simulator
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      # Run flutter integrate tests
      - name: Run Flutter Driver tests
        run: cd example && flutter drive --driver=test_driver/integration_test.dart integration_test/flutter_uploader_test.dart


  drive_android:
    runs-on: macos-latest
    #creates a build matrix for your jobs
    strategy:
      #set of different configurations of the virtual environment.
      matrix:
        api-level: [21, 29]
        target: [default]
    needs: test
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Run Flutter Driver tests
        uses: reactivecircus/android-emulator-runner@v1
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          profile: Nexus 6
          script: cd example && flutter drive --driver=test_driver/integration_test.dart integration_test/flutter_uploader_test.dart