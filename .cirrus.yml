code_style_task:
  container:
    dockerfile: .ci/Dockerfile
    cpu: 8
    memory: 16G
#  upgrade_script:
#    - flutter channel master
#    - flutter upgrade
#    - git fetch origin master
#  activate_script: pub global activate flutter_plugin_tools
  matrix:
    - name: test+format
#      install_script:
#        - wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
#        - sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main"
#        - sudo apt-get update
#        - sudo apt-get install -y --allow-unauthenticated clang-format-7
      format_script: script/format.sh
    - name: analyze
      script:
        - pub global activate tuneup
        - flutter packages get
        - pub global run tuneup check

android_task:
  container:
    dockerfile: .ci/Dockerfile
    cpu: 3
    memory: 4G
  build_script:
    - cd example && flutter build apk --release

connected_check_task:
  name: Flutter driver test on Android
  only_if: $CIRRUS_BRANCH == "master" || CIRRUS_PR != ""
  env:
    API_LEVEL: 28
    TARGET: default
    ARCH: x86_64
  container:
    dockerfile: .ci/Dockerfile
    cpu: 3
    memory: 4G
    kvm: true
  create_device_script:
    - echo no | avdmanager create avd --force --name "api-${API_LEVEL}" --abi "${TARGET}/${ARCH}" --package "system-images;android-${API_LEVEL};${TARGET};${ARCH}"
  start_emulator_background_script:
    - $ANDROID_HOME/emulator/emulator -avd "api-${API_LEVEL}" -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none
  wait_for_emulator_script:
    - adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done; input keyevent 82'
  disable_animations_script:
    - adb shell settings put global window_animation_scale 0.0
    - adb shell settings put global transition_animation_scale 0.0
    - adb shell settings put global animator_duration_scale 0.0
  run_instrumented_tests_script:
    - cd example
    - flutter drive --driver=test_driver/flutter_uploader_e2e_test.dart test_driver/flutter_uploader_test.dart

ios_task:
  osx_instance:
    image: catalina-flutter
  create_simulator_script:
    - xcrun simctl list
    - xcrun simctl create Flutter-iPhone com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-13-5 | xargs xcrun simctl boot
  build_script:
    - pod repo update
    - cd example && flutter build ios --release --no-codesign
  run_instrumented_tests_script:
    - cd example
    - flutter drive --driver=test_driver/flutter_uploader_e2e_test.dart test_driver/flutter_uploader_test.dart
